# Generated by Django 3.1.3 on 2020-11-21 14:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScopeData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(max_length=3)),
                ('enable_bool', models.BooleanField(default=False, verbose_name='enable')),
                ('invert_bool', models.BooleanField(default=False, verbose_name='invert')),
                ('filter_bool', models.BooleanField(default=False, verbose_name='filter')),
                ('ch_scale', models.CharField(max_length=12, verbose_name='ch_scale')),
                ('ch_coupling', models.CharField(max_length=3, verbose_name='ch_coupling')),
                ('ch_probe', models.CharField(max_length=4, verbose_name='ch_probe')),
                ('time_base', models.CharField(max_length=12, verbose_name='time_base')),
                # ('power_channel', models.CharField(max_length=12, verbose_name='power_channel')),
                # ('voltage', models.CharField(max_length=12, verbose_name='voltage')),
                ('offset_x', models.CharField(max_length=12, verbose_name='offset_x')),
                ('offset_y', models.CharField(max_length=12, verbose_name='offset_y')),
                ('hori_pos', models.CharField(max_length=12, verbose_name='hori_pos')),
                ('fetch_mode', models.CharField(max_length=8, verbose_name='fetch_mode')),
                ('insert', models.CharField(max_length=4, verbose_name='insert')),
                ('trig_type', models.CharField(max_length=5, verbose_name='trig_type')),
                ('trig_source', models.CharField(max_length=7, verbose_name='trig_source')),
                ('trig_mode', models.CharField(max_length=6, verbose_name='trig_mode')),
            ],
        ),
        migrations.CreateModel(
            name='TestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amplitude', models.IntegerField(verbose_name='Амплитуда')),
                ('time', models.FloatField(verbose_name='Время')),
            ],
        ),
    ]
